// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomePage render the <HomePage> component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HomePage
    resetApplicationState={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Styled(article)
        className="message is-primary"
      >
        <div
          className="message-header"
        >
          <p>
            Welcome!
          </p>
        </div>
        <div
          className="message-body"
        >
          <p>
            This is a simple programme manager web application built in React. Click on the Programme List option above to go to list page.
          </p>
          <hr />
          <p>
            <em>
              NOTE: Application data is persisted to local storage, you can use this button to reset the application to initial state and retrieve the original list of programmes:
            </em>
          </p>
          <br />
          <p>
            <button
              className="button is-danger"
              onClick={[MockFunction]}
            >
              Reset
            </button>
          </p>
        </div>
      </Styled(article)>,
      "className": "homepage",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            className="message-header"
          >
            <p>
              Welcome!
            </p>
          </div>,
          <div
            className="message-body"
          >
            <p>
              This is a simple programme manager web application built in React. Click on the Programme List option above to go to list page.
            </p>
            <hr />
            <p>
              <em>
                NOTE: Application data is persisted to local storage, you can use this button to reset the application to initial state and retrieve the original list of programmes:
              </em>
            </p>
            <br />
            <p>
              <button
                className="button is-danger"
                onClick={[MockFunction]}
              >
                Reset
              </button>
            </p>
          </div>,
        ],
        "className": "message is-primary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p>
              Welcome!
            </p>,
            "className": "message-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome!",
            },
            "ref": null,
            "rendered": "Welcome!",
            "type": "p",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                This is a simple programme manager web application built in React. Click on the Programme List option above to go to list page.
              </p>,
              <hr />,
              <p>
                <em>
                  NOTE: Application data is persisted to local storage, you can use this button to reset the application to initial state and retrieve the original list of programmes:
                </em>
              </p>,
              <br />,
              <p>
                <button
                  className="button is-danger"
                  onClick={[MockFunction]}
                >
                  Reset
                </button>
              </p>,
            ],
            "className": "message-body",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "This is a simple programme manager web application built in React. Click on the Programme List option above to go to list page.",
              },
              "ref": null,
              "rendered": "This is a simple programme manager web application built in React. Click on the Programme List option above to go to list page.",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "hr",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <em>
                  NOTE: Application data is persisted to local storage, you can use this button to reset the application to initial state and retrieve the original list of programmes:
                </em>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "NOTE: Application data is persisted to local storage, you can use this button to reset the application to initial state and retrieve the original list of programmes:",
                },
                "ref": null,
                "rendered": "NOTE: Application data is persisted to local storage, you can use this button to reset the application to initial state and retrieve the original list of programmes:",
                "type": "em",
              },
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <button
                  className="button is-danger"
                  onClick={[MockFunction]}
                >
                  Reset
                </button>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Reset",
                  "className": "button is-danger",
                  "onClick": [MockFunction],
                },
                "ref": null,
                "rendered": "Reset",
                "type": "button",
              },
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Styled(article)
          className="message is-primary"
        >
          <div
            className="message-header"
          >
            <p>
              Welcome!
            </p>
          </div>
          <div
            className="message-body"
          >
            <p>
              This is a simple programme manager web application built in React. Click on the Programme List option above to go to list page.
            </p>
            <hr />
            <p>
              <em>
                NOTE: Application data is persisted to local storage, you can use this button to reset the application to initial state and retrieve the original list of programmes:
              </em>
            </p>
            <br />
            <p>
              <button
                className="button is-danger"
                onClick={[MockFunction]}
              >
                Reset
              </button>
            </p>
          </div>
        </Styled(article)>,
        "className": "homepage",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div
              className="message-header"
            >
              <p>
                Welcome!
              </p>
            </div>,
            <div
              className="message-body"
            >
              <p>
                This is a simple programme manager web application built in React. Click on the Programme List option above to go to list page.
              </p>
              <hr />
              <p>
                <em>
                  NOTE: Application data is persisted to local storage, you can use this button to reset the application to initial state and retrieve the original list of programmes:
                </em>
              </p>
              <br />
              <p>
                <button
                  className="button is-danger"
                  onClick={[MockFunction]}
                >
                  Reset
                </button>
              </p>
            </div>,
          ],
          "className": "message is-primary",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <p>
                Welcome!
              </p>,
              "className": "message-header",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome!",
              },
              "ref": null,
              "rendered": "Welcome!",
              "type": "p",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p>
                  This is a simple programme manager web application built in React. Click on the Programme List option above to go to list page.
                </p>,
                <hr />,
                <p>
                  <em>
                    NOTE: Application data is persisted to local storage, you can use this button to reset the application to initial state and retrieve the original list of programmes:
                  </em>
                </p>,
                <br />,
                <p>
                  <button
                    className="button is-danger"
                    onClick={[MockFunction]}
                  >
                    Reset
                  </button>
                </p>,
              ],
              "className": "message-body",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "This is a simple programme manager web application built in React. Click on the Programme List option above to go to list page.",
                },
                "ref": null,
                "rendered": "This is a simple programme manager web application built in React. Click on the Programme List option above to go to list page.",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "hr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <em>
                    NOTE: Application data is persisted to local storage, you can use this button to reset the application to initial state and retrieve the original list of programmes:
                  </em>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "NOTE: Application data is persisted to local storage, you can use this button to reset the application to initial state and retrieve the original list of programmes:",
                  },
                  "ref": null,
                  "rendered": "NOTE: Application data is persisted to local storage, you can use this button to reset the application to initial state and retrieve the original list of programmes:",
                  "type": "em",
                },
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <button
                    className="button is-danger"
                    onClick={[MockFunction]}
                  >
                    Reset
                  </button>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Reset",
                    "className": "button is-danger",
                    "onClick": [MockFunction],
                  },
                  "ref": null,
                  "rendered": "Reset",
                  "type": "button",
                },
                "type": "p",
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
