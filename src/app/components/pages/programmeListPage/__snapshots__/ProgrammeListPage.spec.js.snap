// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProgrammeListPage render the <ProgrammeListPage> component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProgrammeListPage
    isModalOpen={false}
    openProgrammeModal={[MockFunction]}
    programmeList={
      Array [
        Object {
          "id": 123,
        },
        Object {
          "id": 456,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="container programme-list-page"
      >
        <div
          className="columns"
        >
          <div
            className="column is-8"
          >
            <Styled(h2)>
              Programme List
            </Styled(h2)>
          </div>
          <div
            className="column is-4"
          >
            <Connect(Search) />
          </div>
        </div>
        <Styled(div)>
          <button
            className="button is-primary"
            onClick={[MockFunction]}
          >
            <span
              className="icon"
            >
              <i
                className="fa fa-plus"
              />
            </span>
            <span>
              Add Programme
            </span>
          </button>
        </Styled(div)>
        <Table>
          <Connect(TableRow)
            programme={
              Object {
                "id": 123,
              }
            }
          />
          <Connect(TableRow)
            programme={
              Object {
                "id": 456,
              }
            }
          />
        </Table>
        <withRouter(Connect(ProgrammeModal)) />
      </div>,
      "className": "section",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="columns"
          >
            <div
              className="column is-8"
            >
              <Styled(h2)>
                Programme List
              </Styled(h2)>
            </div>
            <div
              className="column is-4"
            >
              <Connect(Search) />
            </div>
          </div>,
          <Styled(div)>
            <button
              className="button is-primary"
              onClick={[MockFunction]}
            >
              <span
                className="icon"
              >
                <i
                  className="fa fa-plus"
                />
              </span>
              <span>
                Add Programme
              </span>
            </button>
          </Styled(div)>,
          <Table>
            <Connect(TableRow)
              programme={
                Object {
                  "id": 123,
                }
              }
            />
            <Connect(TableRow)
              programme={
                Object {
                  "id": 456,
                }
              }
            />
          </Table>,
          <withRouter(Connect(ProgrammeModal)) />,
        ],
        "className": "container programme-list-page",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="column is-8"
              >
                <Styled(h2)>
                  Programme List
                </Styled(h2)>
              </div>,
              <div
                className="column is-4"
              >
                <Connect(Search) />
              </div>,
            ],
            "className": "columns",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Styled(h2)>
                  Programme List
                </Styled(h2)>,
                "className": "column is-8",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Programme List",
                },
                "ref": null,
                "rendered": "Programme List",
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(Search) />,
                "className": "column is-4",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <button
              className="button is-primary"
              onClick={[MockFunction]}
            >
              <span
                className="icon"
              >
                <i
                  className="fa fa-plus"
                />
              </span>
              <span>
                Add Programme
              </span>
            </button>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="icon"
                >
                  <i
                    className="fa fa-plus"
                  />
                </span>,
                <span>
                  Add Programme
                </span>,
              ],
              "className": "button is-primary",
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="fa fa-plus"
                  />,
                  "className": "icon",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fa fa-plus",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Add Programme",
                },
                "ref": null,
                "rendered": "Add Programme",
                "type": "span",
              },
            ],
            "type": "button",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Connect(TableRow)
                programme={
                  Object {
                    "id": 123,
                  }
                }
              />,
              <Connect(TableRow)
                programme={
                  Object {
                    "id": 456,
                  }
                }
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "class",
              "props": Object {
                "programme": Object {
                  "id": 123,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "class",
              "props": Object {
                "programme": Object {
                  "id": 456,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container programme-list-page"
        >
          <div
            className="columns"
          >
            <div
              className="column is-8"
            >
              <Styled(h2)>
                Programme List
              </Styled(h2)>
            </div>
            <div
              className="column is-4"
            >
              <Connect(Search) />
            </div>
          </div>
          <Styled(div)>
            <button
              className="button is-primary"
              onClick={[MockFunction]}
            >
              <span
                className="icon"
              >
                <i
                  className="fa fa-plus"
                />
              </span>
              <span>
                Add Programme
              </span>
            </button>
          </Styled(div)>
          <Table>
            <Connect(TableRow)
              programme={
                Object {
                  "id": 123,
                }
              }
            />
            <Connect(TableRow)
              programme={
                Object {
                  "id": 456,
                }
              }
            />
          </Table>
          <withRouter(Connect(ProgrammeModal)) />
        </div>,
        "className": "section",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="columns"
            >
              <div
                className="column is-8"
              >
                <Styled(h2)>
                  Programme List
                </Styled(h2)>
              </div>
              <div
                className="column is-4"
              >
                <Connect(Search) />
              </div>
            </div>,
            <Styled(div)>
              <button
                className="button is-primary"
                onClick={[MockFunction]}
              >
                <span
                  className="icon"
                >
                  <i
                    className="fa fa-plus"
                  />
                </span>
                <span>
                  Add Programme
                </span>
              </button>
            </Styled(div)>,
            <Table>
              <Connect(TableRow)
                programme={
                  Object {
                    "id": 123,
                  }
                }
              />
              <Connect(TableRow)
                programme={
                  Object {
                    "id": 456,
                  }
                }
              />
            </Table>,
            <withRouter(Connect(ProgrammeModal)) />,
          ],
          "className": "container programme-list-page",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="column is-8"
                >
                  <Styled(h2)>
                    Programme List
                  </Styled(h2)>
                </div>,
                <div
                  className="column is-4"
                >
                  <Connect(Search) />
                </div>,
              ],
              "className": "columns",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Styled(h2)>
                    Programme List
                  </Styled(h2)>,
                  "className": "column is-8",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Programme List",
                  },
                  "ref": null,
                  "rendered": "Programme List",
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(Search) />,
                  "className": "column is-4",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <button
                className="button is-primary"
                onClick={[MockFunction]}
              >
                <span
                  className="icon"
                >
                  <i
                    className="fa fa-plus"
                  />
                </span>
                <span>
                  Add Programme
                </span>
              </button>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="icon"
                  >
                    <i
                      className="fa fa-plus"
                    />
                  </span>,
                  <span>
                    Add Programme
                  </span>,
                ],
                "className": "button is-primary",
                "onClick": [MockFunction],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <i
                      className="fa fa-plus"
                    />,
                    "className": "icon",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "fa fa-plus",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "i",
                  },
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Add Programme",
                  },
                  "ref": null,
                  "rendered": "Add Programme",
                  "type": "span",
                },
              ],
              "type": "button",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Connect(TableRow)
                  programme={
                    Object {
                      "id": 123,
                    }
                  }
                />,
                <Connect(TableRow)
                  programme={
                    Object {
                      "id": 456,
                    }
                  }
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "programme": Object {
                    "id": 123,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "programme": Object {
                    "id": 456,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
