// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Footer render the <Footer> component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Footer />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className="content has-text-centered"
      >
        <p>
          Built by 
          <Styled(a)
            href="mailto:ally@allygraham.co.uk"
          >
            Ally Graham
          </Styled(a)>
        </p>
      </div>,
      "className": "footer",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <p>
          Built by 
          <Styled(a)
            href="mailto:ally@allygraham.co.uk"
          >
            Ally Graham
          </Styled(a)>
        </p>,
        "className": "content has-text-centered",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Built by ",
            <Styled(a)
              href="mailto:ally@allygraham.co.uk"
            >
              Ally Graham
            </Styled(a)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          "Built by ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Ally Graham",
              "href": "mailto:ally@allygraham.co.uk",
            },
            "ref": null,
            "rendered": "Ally Graham",
            "type": [Function],
          },
        ],
        "type": "p",
      },
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="content has-text-centered"
        >
          <p>
            Built by 
            <Styled(a)
              href="mailto:ally@allygraham.co.uk"
            >
              Ally Graham
            </Styled(a)>
          </p>
        </div>,
        "className": "footer",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p>
            Built by 
            <Styled(a)
              href="mailto:ally@allygraham.co.uk"
            >
              Ally Graham
            </Styled(a)>
          </p>,
          "className": "content has-text-centered",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Built by ",
              <Styled(a)
                href="mailto:ally@allygraham.co.uk"
              >
                Ally Graham
              </Styled(a)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Built by ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Ally Graham",
                "href": "mailto:ally@allygraham.co.uk",
              },
              "ref": null,
              "rendered": "Ally Graham",
              "type": [Function],
            },
          ],
          "type": "p",
        },
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
