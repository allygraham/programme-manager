// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form render the <Form> component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    formData={
      Object {
        "active": false,
        "id": 0,
        "name": "",
        "shortDescription": "",
      }
    }
    isEditing={false}
    onSubmit={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="field"
        >
          <label
            className="label"
          >
            ID
          </label>
          <div
            className="control"
          >
            <input
              className="input"
              disabled={false}
              onChange={[Function]}
              placeholder="Enter an ID..."
              type="number"
              value={0}
            />
          </div>
        </div>,
        <div
          className="field"
        >
          <label
            className="label"
          >
            Name
          </label>
          <div
            className="control"
          >
            <input
              className="input"
              onChange={[Function]}
              placeholder="Enter a name..."
              type="text"
              value=""
            />
          </div>
        </div>,
        <div
          className="field"
        >
          <label
            className="label"
          >
            Description
          </label>
          <div
            className="control"
          >
            <textarea
              className="textarea"
              onChange={[Function]}
              placeholder="Enter a description..."
              value=""
            />
          </div>
        </div>,
        <div
          className="field"
        >
          <div
            className="control"
          >
            <label
              className="checkbox"
            >
              <input
                checked={false}
                onChange={[Function]}
                type="checkbox"
              />
              <Styled(span)>
                Is this programme currently active?
              </Styled(span)>
            </label>
          </div>
        </div>,
        false,
        <div
          className="field"
        >
          <div
            className="control"
          >
            <Styled(button)
              className="button is-link"
              onClick={[Function]}
              type="submit"
            >
              Save
            </Styled(button)>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              className="label"
            >
              ID
            </label>,
            <div
              className="control"
            >
              <input
                className="input"
                disabled={false}
                onChange={[Function]}
                placeholder="Enter an ID..."
                type="number"
                value={0}
              />
            </div>,
          ],
          "className": "field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "ID",
              "className": "label",
            },
            "ref": null,
            "rendered": "ID",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="input"
                disabled={false}
                onChange={[Function]}
                placeholder="Enter an ID..."
                type="number"
                value={0}
              />,
              "className": "control",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input",
                "disabled": false,
                "onChange": [Function],
                "placeholder": "Enter an ID...",
                "type": "number",
                "value": 0,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              className="label"
            >
              Name
            </label>,
            <div
              className="control"
            >
              <input
                className="input"
                onChange={[Function]}
                placeholder="Enter a name..."
                type="text"
                value=""
              />
            </div>,
          ],
          "className": "field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Name",
              "className": "label",
            },
            "ref": null,
            "rendered": "Name",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="input"
                onChange={[Function]}
                placeholder="Enter a name..."
                type="text"
                value=""
              />,
              "className": "control",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input",
                "onChange": [Function],
                "placeholder": "Enter a name...",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              className="label"
            >
              Description
            </label>,
            <div
              className="control"
            >
              <textarea
                className="textarea"
                onChange={[Function]}
                placeholder="Enter a description..."
                value=""
              />
            </div>,
          ],
          "className": "field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Description",
              "className": "label",
            },
            "ref": null,
            "rendered": "Description",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <textarea
                className="textarea"
                onChange={[Function]}
                placeholder="Enter a description..."
                value=""
              />,
              "className": "control",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "textarea",
                "onChange": [Function],
                "placeholder": "Enter a description...",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="control"
          >
            <label
              className="checkbox"
            >
              <input
                checked={false}
                onChange={[Function]}
                type="checkbox"
              />
              <Styled(span)>
                Is this programme currently active?
              </Styled(span)>
            </label>
          </div>,
          "className": "field",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <label
              className="checkbox"
            >
              <input
                checked={false}
                onChange={[Function]}
                type="checkbox"
              />
              <Styled(span)>
                Is this programme currently active?
              </Styled(span)>
            </label>,
            "className": "control",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  checked={false}
                  onChange={[Function]}
                  type="checkbox"
                />,
                <Styled(span)>
                  Is this programme currently active?
                </Styled(span)>,
              ],
              "className": "checkbox",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "checked": false,
                  "onChange": [Function],
                  "type": "checkbox",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Is this programme currently active?",
                },
                "ref": null,
                "rendered": "Is this programme currently active?",
                "type": [Function],
              },
            ],
            "type": "label",
          },
          "type": "div",
        },
        "type": "div",
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="control"
          >
            <Styled(button)
              className="button is-link"
              onClick={[Function]}
              type="submit"
            >
              Save
            </Styled(button)>
          </div>,
          "className": "field",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Styled(button)
              className="button is-link"
              onClick={[Function]}
              type="submit"
            >
              Save
            </Styled(button)>,
            "className": "control",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Save",
              "className": "button is-link",
              "onClick": [Function],
              "type": "submit",
            },
            "ref": null,
            "rendered": "Save",
            "type": [Function],
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="field"
          >
            <label
              className="label"
            >
              ID
            </label>
            <div
              className="control"
            >
              <input
                className="input"
                disabled={false}
                onChange={[Function]}
                placeholder="Enter an ID..."
                type="number"
                value={0}
              />
            </div>
          </div>,
          <div
            className="field"
          >
            <label
              className="label"
            >
              Name
            </label>
            <div
              className="control"
            >
              <input
                className="input"
                onChange={[Function]}
                placeholder="Enter a name..."
                type="text"
                value=""
              />
            </div>
          </div>,
          <div
            className="field"
          >
            <label
              className="label"
            >
              Description
            </label>
            <div
              className="control"
            >
              <textarea
                className="textarea"
                onChange={[Function]}
                placeholder="Enter a description..."
                value=""
              />
            </div>
          </div>,
          <div
            className="field"
          >
            <div
              className="control"
            >
              <label
                className="checkbox"
              >
                <input
                  checked={false}
                  onChange={[Function]}
                  type="checkbox"
                />
                <Styled(span)>
                  Is this programme currently active?
                </Styled(span)>
              </label>
            </div>
          </div>,
          false,
          <div
            className="field"
          >
            <div
              className="control"
            >
              <Styled(button)
                className="button is-link"
                onClick={[Function]}
                type="submit"
              >
                Save
              </Styled(button)>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="label"
              >
                ID
              </label>,
              <div
                className="control"
              >
                <input
                  className="input"
                  disabled={false}
                  onChange={[Function]}
                  placeholder="Enter an ID..."
                  type="number"
                  value={0}
                />
              </div>,
            ],
            "className": "field",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "ID",
                "className": "label",
              },
              "ref": null,
              "rendered": "ID",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input"
                  disabled={false}
                  onChange={[Function]}
                  placeholder="Enter an ID..."
                  type="number"
                  value={0}
                />,
                "className": "control",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input",
                  "disabled": false,
                  "onChange": [Function],
                  "placeholder": "Enter an ID...",
                  "type": "number",
                  "value": 0,
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="label"
              >
                Name
              </label>,
              <div
                className="control"
              >
                <input
                  className="input"
                  onChange={[Function]}
                  placeholder="Enter a name..."
                  type="text"
                  value=""
                />
              </div>,
            ],
            "className": "field",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Name",
                "className": "label",
              },
              "ref": null,
              "rendered": "Name",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="input"
                  onChange={[Function]}
                  placeholder="Enter a name..."
                  type="text"
                  value=""
                />,
                "className": "control",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input",
                  "onChange": [Function],
                  "placeholder": "Enter a name...",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="label"
              >
                Description
              </label>,
              <div
                className="control"
              >
                <textarea
                  className="textarea"
                  onChange={[Function]}
                  placeholder="Enter a description..."
                  value=""
                />
              </div>,
            ],
            "className": "field",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Description",
                "className": "label",
              },
              "ref": null,
              "rendered": "Description",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <textarea
                  className="textarea"
                  onChange={[Function]}
                  placeholder="Enter a description..."
                  value=""
                />,
                "className": "control",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "textarea",
                  "onChange": [Function],
                  "placeholder": "Enter a description...",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "textarea",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="control"
            >
              <label
                className="checkbox"
              >
                <input
                  checked={false}
                  onChange={[Function]}
                  type="checkbox"
                />
                <Styled(span)>
                  Is this programme currently active?
                </Styled(span)>
              </label>
            </div>,
            "className": "field",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <label
                className="checkbox"
              >
                <input
                  checked={false}
                  onChange={[Function]}
                  type="checkbox"
                />
                <Styled(span)>
                  Is this programme currently active?
                </Styled(span)>
              </label>,
              "className": "control",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    checked={false}
                    onChange={[Function]}
                    type="checkbox"
                  />,
                  <Styled(span)>
                    Is this programme currently active?
                  </Styled(span)>,
                ],
                "className": "checkbox",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "checked": false,
                    "onChange": [Function],
                    "type": "checkbox",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Is this programme currently active?",
                  },
                  "ref": null,
                  "rendered": "Is this programme currently active?",
                  "type": [Function],
                },
              ],
              "type": "label",
            },
            "type": "div",
          },
          "type": "div",
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="control"
            >
              <Styled(button)
                className="button is-link"
                onClick={[Function]}
                type="submit"
              >
                Save
              </Styled(button)>
            </div>,
            "className": "field",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Styled(button)
                className="button is-link"
                onClick={[Function]}
                type="submit"
              >
                Save
              </Styled(button)>,
              "className": "control",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Save",
                "className": "button is-link",
                "onClick": [Function],
                "type": "submit",
              },
              "ref": null,
              "rendered": "Save",
              "type": [Function],
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
