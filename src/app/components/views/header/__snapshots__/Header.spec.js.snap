// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header render the <Header> component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="navbar-brand"
        >
          <Link
            replace={false}
            to="/home"
          >
            <Styled(h1)
              className="navbar-item is-size-5"
            >
              Programme Manager
            </Styled(h1)>
          </Link>
        </div>,
        <div
          className="navbar-menu is-active"
        >
          <div
            className="navbar-start"
          >
            <Link
              className="navbar-item"
              replace={false}
              to="/programme-list"
            >
              <i
                className="fa fa-list"
              />
              <Styled(span)>
                Programme List
              </Styled(span)>
            </Link>
          </div>
        </div>,
      ],
      "className": "header navbar is-link",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            replace={false}
            to="/home"
          >
            <Styled(h1)
              className="navbar-item is-size-5"
            >
              Programme Manager
            </Styled(h1)>
          </Link>,
          "className": "navbar-brand",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(h1)
              className="navbar-item is-size-5"
            >
              Programme Manager
            </Styled(h1)>,
            "replace": false,
            "to": "/home",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Programme Manager",
              "className": "navbar-item is-size-5",
            },
            "ref": null,
            "rendered": "Programme Manager",
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="navbar-start"
          >
            <Link
              className="navbar-item"
              replace={false}
              to="/programme-list"
            >
              <i
                className="fa fa-list"
              />
              <Styled(span)>
                Programme List
              </Styled(span)>
            </Link>
          </div>,
          "className": "navbar-menu is-active",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              className="navbar-item"
              replace={false}
              to="/programme-list"
            >
              <i
                className="fa fa-list"
              />
              <Styled(span)>
                Programme List
              </Styled(span)>
            </Link>,
            "className": "navbar-start",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <i
                  className="fa fa-list"
                />,
                <Styled(span)>
                  Programme List
                </Styled(span)>,
              ],
              "className": "navbar-item",
              "replace": false,
              "to": "/programme-list",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fa fa-list",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Programme List",
                },
                "ref": null,
                "rendered": "Programme List",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "nav",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="navbar-brand"
          >
            <Link
              replace={false}
              to="/home"
            >
              <Styled(h1)
                className="navbar-item is-size-5"
              >
                Programme Manager
              </Styled(h1)>
            </Link>
          </div>,
          <div
            className="navbar-menu is-active"
          >
            <div
              className="navbar-start"
            >
              <Link
                className="navbar-item"
                replace={false}
                to="/programme-list"
              >
                <i
                  className="fa fa-list"
                />
                <Styled(span)>
                  Programme List
                </Styled(span)>
              </Link>
            </div>
          </div>,
        ],
        "className": "header navbar is-link",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              replace={false}
              to="/home"
            >
              <Styled(h1)
                className="navbar-item is-size-5"
              >
                Programme Manager
              </Styled(h1)>
            </Link>,
            "className": "navbar-brand",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(h1)
                className="navbar-item is-size-5"
              >
                Programme Manager
              </Styled(h1)>,
              "replace": false,
              "to": "/home",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Programme Manager",
                "className": "navbar-item is-size-5",
              },
              "ref": null,
              "rendered": "Programme Manager",
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="navbar-start"
            >
              <Link
                className="navbar-item"
                replace={false}
                to="/programme-list"
              >
                <i
                  className="fa fa-list"
                />
                <Styled(span)>
                  Programme List
                </Styled(span)>
              </Link>
            </div>,
            "className": "navbar-menu is-active",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                className="navbar-item"
                replace={false}
                to="/programme-list"
              >
                <i
                  className="fa fa-list"
                />
                <Styled(span)>
                  Programme List
                </Styled(span)>
              </Link>,
              "className": "navbar-start",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <i
                    className="fa fa-list"
                  />,
                  <Styled(span)>
                    Programme List
                  </Styled(span)>,
                ],
                "className": "navbar-item",
                "replace": false,
                "to": "/programme-list",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fa fa-list",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Programme List",
                  },
                  "ref": null,
                  "rendered": "Programme List",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "nav",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
