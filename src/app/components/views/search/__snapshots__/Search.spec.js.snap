// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search render the <Search> component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    clearSearch={[MockFunction]}
    handleSearch={[MockFunction]}
    searchValue="100"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "allowEmptySearch": false,
      "dynamicSearchStartsFrom": 1,
      "inputClassName": "search-bar",
      "onCloseClick": [MockFunction],
      "onSearch": [MockFunction],
      "searchPlaceHolder": "Search a name...",
      "tooltip": "",
      "tooltipDelay": 0,
      "value": "100",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "allowEmptySearch": false,
        "dynamicSearchStartsFrom": 1,
        "inputClassName": "search-bar",
        "onCloseClick": [MockFunction],
        "onSearch": [MockFunction],
        "searchPlaceHolder": "Search a name...",
        "tooltip": "",
        "tooltipDelay": 0,
        "value": "100",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
