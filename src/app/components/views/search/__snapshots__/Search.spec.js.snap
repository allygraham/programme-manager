// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search render the <Search> component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    clearSearch={[MockFunction]}
    handleSearch={[MockFunction]}
    searchValue="100"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <p
        className="control"
      >
        <input
          className="input is-medium"
          onChange={[Function]}
          placeholder="Search a name..."
          type="search"
          value="100"
        />
      </p>,
      "className": "field",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <input
          className="input is-medium"
          onChange={[Function]}
          placeholder="Search a name..."
          type="search"
          value="100"
        />,
        "className": "control",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "input is-medium",
          "onChange": [Function],
          "placeholder": "Search a name...",
          "type": "search",
          "value": "100",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      "type": "p",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <p
          className="control"
        >
          <input
            className="input is-medium"
            onChange={[Function]}
            placeholder="Search a name..."
            type="search"
            value="100"
          />
        </p>,
        "className": "field",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <input
            className="input is-medium"
            onChange={[Function]}
            placeholder="Search a name..."
            type="search"
            value="100"
          />,
          "className": "control",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "input is-medium",
            "onChange": [Function],
            "placeholder": "Search a name...",
            "type": "search",
            "value": "100",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "type": "p",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
