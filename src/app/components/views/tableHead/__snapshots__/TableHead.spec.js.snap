// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TableHead render the <TableHead> component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TableHead
    sortBy={[MockFunction]}
    sortCriteria="name"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Styled(th)
          active={false}
          onClick={[Function]}
        >
          ID
        </Styled(th)>,
        <Styled(th)
          active={true}
          onClick={[Function]}
        >
          Name
          <Styled(i)
            className="fa fa-chevron-down"
          />
        </Styled(th)>,
        <th>
          Description
        </th>,
        <th>
          Status
        </th>,
        <th>
          Remove
        </th>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "active": false,
          "children": Array [
            "ID",
            false,
          ],
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          "ID",
          false,
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "active": true,
          "children": Array [
            "Name",
            <Styled(i)
              className="fa fa-chevron-down"
            />,
          ],
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          "Name",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "fa fa-chevron-down",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Description",
        },
        "ref": null,
        "rendered": "Description",
        "type": "th",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Status",
        },
        "ref": null,
        "rendered": "Status",
        "type": "th",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Remove",
        },
        "ref": null,
        "rendered": "Remove",
        "type": "th",
      },
    ],
    "type": "tr",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Styled(th)
            active={false}
            onClick={[Function]}
          >
            ID
          </Styled(th)>,
          <Styled(th)
            active={true}
            onClick={[Function]}
          >
            Name
            <Styled(i)
              className="fa fa-chevron-down"
            />
          </Styled(th)>,
          <th>
            Description
          </th>,
          <th>
            Status
          </th>,
          <th>
            Remove
          </th>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": false,
            "children": Array [
              "ID",
              false,
            ],
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "ID",
            false,
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": true,
            "children": Array [
              "Name",
              <Styled(i)
                className="fa fa-chevron-down"
              />,
            ],
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "Name",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "fa fa-chevron-down",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Description",
          },
          "ref": null,
          "rendered": "Description",
          "type": "th",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Status",
          },
          "ref": null,
          "rendered": "Status",
          "type": "th",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Remove",
          },
          "ref": null,
          "rendered": "Remove",
          "type": "th",
        },
      ],
      "type": "tr",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
